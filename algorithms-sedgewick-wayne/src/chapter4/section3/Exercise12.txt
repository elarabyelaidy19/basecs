4.3.12

Considering a graph with distinct edge weights:

* The lightest edge has to belong to the MST.
Proof: The greedy algorithms analyzed work by finding cuts with no black edges and coloring its minimum-weight edge black. The lightest edge in the graph will be the minimum-weight edge in one of the cuts. In fact, when using Kruskal's algorithm, the lightest edge will be the first edge added to the MST.
If the lightest edge were not part of the MST, this would mean that there is another edge e with a lower weight than it in some cut, and that e was added to the MST. And that would be a contradiction, since e cannot be the lightest edge.

* The heaviest edge can belong to the MST.
Consider the following example, where the heaviest edge belongs to the MST:
   A
  / \
 B - C - E

Where the weights of the edges are:
A-B = 1
B-C = 1
A-C = 2
C-E = 100

The MST in this case is: A-B B-C C-E

* A min-weight edge on every cycle does not have to belong to the MST.
Consider the following example, where a min-weight edge on a cycle does not belong to the MST:
 A - B
 | X |
 C - D

Where the weights of the edges are:
A-B = 1
B-D = 2
A-D = 3
A-C = 4
C-D = 5
B-C = 6

The MST is formed by A-B, B-D, and A-C with a total weight of 7 (clearly no spanning tree has less weight).
Now consider the cycle A-C-D-A, where A-D is the min-weight edge.
The edge A-D is not in the MST, which contradicts the proposition.

Thanks to luowyang (https://github.com/luowyang) for the correct solution of the third proposition:
https://github.com/reneargento/algorithms-sedgewick-wayne/issues/96