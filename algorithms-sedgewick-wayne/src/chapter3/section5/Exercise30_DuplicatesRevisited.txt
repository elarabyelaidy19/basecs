3.5.30 - Duplicates (revisited)

Results:

            Method |   Values type |  Values Generated |     Max Value |  Time spent
 Array index count         Integer                1000             500          0.01
 Array index count         Integer                1000            1000          0.00
 Array index count         Integer                1000            2000          0.00
 Array index count         Integer               10000            5000          0.00
 Array index count         Integer               10000           10000          0.00
 Array index count         Integer               10000           20000          0.00
 Array index count         Integer              100000           50000          0.03
 Array index count         Integer              100000          100000          0.03
 Array index count         Integer              100000          200000          0.03
 Array index count         Integer             1000000          500000          0.26
 Array index count         Integer             1000000         1000000          0.38
 Array index count         Integer             1000000         2000000          0.47
             DeDup         Integer                1000             500          0.00
             DeDup         Integer                1000            1000          0.00
             DeDup         Integer                1000            2000          0.00
             DeDup         Integer               10000            5000          0.01
             DeDup         Integer               10000           10000          0.01
             DeDup         Integer               10000           20000          0.01
             DeDup         Integer              100000           50000          0.05
             DeDup         Integer              100000          100000          0.07
             DeDup         Integer              100000          200000          0.08
             DeDup         Integer             1000000          500000          1.54
             DeDup         Integer             1000000         1000000          1.56
             DeDup         Integer             1000000         2000000          2.50
 Array index count            Long                1000             500          0.00
 Array index count            Long                1000            1000          0.00
 Array index count            Long                1000            2000          0.00
 Array index count            Long               10000            5000          0.00
 Array index count            Long               10000           10000          0.00
 Array index count            Long               10000           20000          0.00
 Array index count            Long              100000           50000          0.02
 Array index count            Long              100000          100000          0.02
 Array index count            Long              100000          200000          0.02
 Array index count            Long             1000000          500000          0.24
 Array index count            Long             1000000         1000000          0.31
 Array index count            Long             1000000         2000000          0.34
             DeDup            Long                1000             500          0.00
             DeDup            Long                1000            1000          0.00
             DeDup            Long                1000            2000          0.00
             DeDup            Long               10000            5000          0.01
             DeDup            Long               10000           10000          0.01
             DeDup            Long               10000           20000          0.01
             DeDup            Long              100000           50000          0.05
             DeDup            Long              100000          100000          0.07
             DeDup            Long              100000          200000          0.09
             DeDup            Long             1000000          500000          1.64
             DeDup            Long             1000000         1000000          1.60
             DeDup            Long             1000000         2000000          2.82

Results for DeDup with 10^7 and 10^8 values generated (10^9 configuration was not used due to operational system limitations)

            Method |   Values type |  Values Generated |     Max Value |  Time spent
             DeDup         Integer            10000000         5000000         24.04
             DeDup         Integer            10000000        10000000         23.69
             DeDup         Integer            10000000        20000000         27.03
             DeDup         Integer           100000000        50000000        464.82
             DeDup         Integer           100000000       100000000        586.17
             DeDup         Integer           100000000       200000000       1634.01
             DeDup            Long            10000000         5000000         23.26
             DeDup            Long            10000000        10000000         24.76
             DeDup            Long            10000000        20000000         25.33
             DeDup            Long           100000000        50000000        514.28
             DeDup            Long           100000000       100000000        730.57
             DeDup            Long           100000000       200000000       1551.53

Dedup takes longer to compute the distinct values than the method counting frequencies in the array for both random integer and random long values. This is expected because even though hash sets and arrays have constant search time, the hash set requires autoboxing and unboxing for the int and long keys, which adds time in the operations.
Also, dedup does up to two operations per value generated: one to check if the set contains the value and (if it does not contain the value) another operation to insert it in the set whereas the array simply increases the value's index count. The dedup implementation in the book could be improved since the extra check to see if the set contains the value is not necessary. Sets do not allow duplicates, so it would internally ignore any attempts to insert a duplicate value.
As expected, the experiments using dedup for N = 10^7 and 10^8 take a longer time.