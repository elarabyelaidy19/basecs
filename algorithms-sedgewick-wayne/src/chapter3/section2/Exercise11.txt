3.2.11

We can build different shapes of trees of height N with all combinations of right and left links on nodes with children.
Example with N = 4:

Insertion order: 1 2 3 4
1
 2
  3
   4

Insertion order: 1 2 4 3
1
 2
  4
 3

Insertion order: 1 4 3 2
 1
  4
 3
2

Insertion order: 1 4 2 3
 1
  4
 2
  3

Insertion order: 4 1 3 2
 4
1
 3
2

Insertion order: 4 1 2 3
 4
1
 2
  3

Insertion order: 4 3 1 2
  4
 3
1
 2

Insertion order: 4 3 2 1
   4
  3
 2
1

Therefore, there are 2^(N - 1) binary tree shapes of N nodes with height N.
And there are 2^(N - 1) different ways to insert N distinct keys into an initially empty BST that result in a tree of height N.

Thanks to Oreshnik (https://github.com/Oreshnik) for finding the correct solution to this exercise.
https://github.com/reneargento/algorithms-sedgewick-wayne/issues/63