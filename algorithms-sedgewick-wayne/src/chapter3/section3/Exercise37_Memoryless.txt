3.3.37 - Memoryless

It can be seen that red-black BSTs are not memoryless by observing the following example:

Inserting keys in the order N, G, D, F, E, O, L, K, M generates the red-black tree:

            (B)G
   (B)E              (B)N
(B)D  (B)F      (R)L      (B)O
            (B)K  (B)M


Tree after inserting minimum key (key A):

               (B)G
      (B)E              (B)N
   (B)D  (B)F      (R)L      (B)O
(R)A            (B)K  (B)M


Deleting minimum key (key A):

               (R)G                 (Flip colors)
      (R)E              (R)N
   (B)D  (B)F      (R)L      (B)O
(R)A            (B)K  (B)M

               (R)G                 (Rotate L right)
      (R)E              (R)L
   (B)D  (B)F      (B)K      (R)N
(R)A                      (B)M  (B)O

                   (R)L             (Rotate G left)
           (R)G            (R)N
      (R)E     (B)K     (B)M  (B)O
   (B)D  (B)F
(R)A

                   (B)L             (Flip colors)
           (B)G            (B)N
      (R)E     (B)K     (B)M  (B)O
   (B)D  (B)F
(R)A

                (B)L                (Delete min)
        (B)G            (B)N
   (R)E     (B)K     (B)M  (B)O
(B)D  (B)F

The final red-black tree is different from the original one.

Thanks to Hunter-Chen (https://github.com/Hunter-Chen) for mentioning that the previous answer was incorrect.
https://github.com/reneargento/algorithms-sedgewick-wayne/issues/186